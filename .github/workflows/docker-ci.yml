name: Docker CI

on:
  push:
    tags:
      - "v*"
    branches:
      - "main"
      - "submodule-spa"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github registry
        uses: docker/login-action@v1 
        with:
          registry: 'ghcr.io'
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            ghcr.io/pjatk21/puppy-api:${{ github.ref_name == 'main' && 'latest' || '${{ github.ref_name }}' }}
          cache-from: type=registry,ref=ghcr.io/pjatk21/puppy-api:buildcache
          cache-to: type=registry,ref=ghcr.io/pjatk21/puppy-api:buildcache,mode=max
          build-args: |
            VITE_GOOGLE_CLIENTID=${{ secrets.PUPPY_GOOGLE_CLIENTID }}
  #deploy:
  #  runs-on: ubuntu-latest
  #  needs:
  #    - build
  #  steps:
  #    - name: Install openssh
  #      run: sudo apt-get update && sudo apt-get install -y openssh-client sshpass
  #    - name: Set up WireGuard
  #      uses: egor-tensin/setup-wireguard@v1
  #      with:
  #        endpoint: '${{ secrets.WG_ENDPOINT }}'
  #        endpoint_public_key: '${{ secrets.WG_ENDPOINT_PUBLIC }}'
  #        ips: '${{ secrets.WG_IPS }}'
  #        allowed_ips: '${{ secrets.WG_ALLOWED_IPS }}'
  #        private_key: '${{ secrets.WG_PRIVATEKEY }}'
  #        preshared_key: '${{ secrets.WG_PRESHAREDKEY }}'
  #    - name: Deploy
  #      run: |
  #        sshpass -p ${{ secrets.SSH_PASSWD }} ssh -oStrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'cd ~ && docker pull ghcr.io/pjatk21/puppy-api:latest'
